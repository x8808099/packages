{"processing_server":"typhoon","pipelines":[{"name":"sort","script":"/* Define the spec */\ninputs_opt('raw','filt','pre','geom');\noutputs('firings_out');\noutputs_opt('filt_out','pre_out');\noutputs_opt('cluster_metrics_out','label_map_out','features_out');\n\nparam('freq_min',300);\nparam('freq_max',6000);\nparam('freq_wid',1000);\nparam('samplerate',48000);\n\nparam('curation','true');\nparam('whiten','true');\nparam('fit_stage','true');\nparam('merge_across_channels','true');\nparam('discard_noisy_clusters','true');\n\nparam('adjacency_radius',-1);\nparam('consolidation_factor',0.95);\n\nparam('detect_sign',1);\nparam('detect_threshold',3);\nparam('detect_interval',30);\n\nparam('clip_size',60);\nparam('clip_shift',5);\nparam('clip_padding',24);\nparam('num_features',10);\nparam('num_features_per_channel',10);\n\nparam('input_clip_size',120);\nparam('noise_detect_time', 48);\nparam('detect_time_discard_thresh',0.5);\nparam('noise_overlap_discard_thresh',0.05);\nparam('event_fraction_threshold',0.5);\n\nparam('firing_rate_thresh',0.05);\nparam('isolation_thresh',0.95);\nparam('noise_overlap_thresh',0.1);\nparam('peak_snr_thresh',1.5);  \n\nparam('extract_fets','false');\nparam('num_features_to_extract',10);      \n\n_Pipeline.run=function(X) {\n  var pp=X.parameters;\n  \n  var pre='pre';\n  if (!X.hasInput('pre')) {\n    \n    var filt='filt';\n    if (!X.hasInput('filt')) {\n      if (!X.hasInput('raw')) {\n        console.error('Missing input: raw, filt or pre');\n        return -1;\n      }\n      X.runProcess('ms3.bandpass_filter',\n                   {timeseries:'raw'},\n                   {timeseries_out:'filt_out'},\n                   {samplerate:pp.samplerate,\n                    freq_min:pp.freq_min,\n                    freq_max:pp.freq_max,\n                    freq_wid:pp.freq_wid});\n      filt='filt_out';\n    }\n  \n    if (pp.whiten=='true') {\n      X.runProcess('ms3.whiten',\n                   {timeseries:filt},\n                   {timeseries_out:'pre_out'},\n                   {});\n    }\n    else {\n      X.runProcess('pyms.normalize_channels',\n                   {timeseries:filt},\n                   {timeseries_out:'pre_out'},\n                   {});\n    }\n    pre='pre_out';\n  }\n\n  var p={\n    clip_size:pp.clip_size,\n    clip_shift:pp.clip_shift,\n    clip_padding:pp.clip_padding,\n    num_features:pp.num_features,    \n    num_features_per_channel:pp.num_features_per_channel,\n    detect_threshold:pp.detect_threshold,\n    detect_sign:pp.detect_sign,\n    detect_interval:pp.detect_interval,\n    adjacency_radius:pp.adjacency_radius,\n    consolidation_factor:pp.consolidation_factor,\n    discard_noisy_clusters:pp.discard_noisy_clusters,\n    merge_across_channels:pp.merge_across_channels,\n    fit_stage:pp.fit_stage,\n    input_clip_size:pp.input_clip_size,\n    noise_detect_time:pp.noise_detect_time,\n    detect_time_discard_thresh:pp.detect_time_discard_thresh,\n    noise_overlap_discard_thresh:pp.noise_overlap_discard_thresh,\n    event_fraction_threshold:pp.event_fraction_threshold\n  };\n  \n  var inputs={timeseries:pre};\n  if (X.hasInput('geom')) {\n    inputs.geom='geom';\n  }\n  \n  X.runProcess('mountainsortalg.ms3alg',\n               inputs,\n               {firings_out:'firings_out'},\n               p);\n  \n  if (pp.curation=='true') {\n    X.runPipeline('curate',\n                 {pre:pre,\n                  firings:'firings_out'},\n                 {cluster_metrics_out:'cluster_metrics_out',\n                  label_map_out:'label_map_out'},\n                 {samplerate:pp.samplerate,\n                  firing_rate_thresh:pp.firing_rate_thresh,\n                  isolation_thresh:pp.isolation_thresh, \n                  noise_overlap_thresh:pp.noise_overlap_thresh, \n                  peak_snr_thresh:pp.peak_snr_thresh});\n  }\n  if (pp.extract_fets=='true') {\n    X.runProcess('ms3.mv_extract_clips_features',\n                 {timeseries:pre,\n                  firings:'firings_out'},\n                 {features_out:'features_out'},\n                 {clip_size:pp.clip_size,\n                  num_features:pp.num_features_to_extract,\n                  subtract_mean:'false'});\n  }  \n\n};\n\n/////////////////////////////////////////////////////////////////////\n\nfunction param(str,val) {\n      if (val===undefined) {\n        _Pipeline.spec.parameters.push({name:str});\n      }\n      else {\n        _Pipeline.spec.parameters.push({name:str,optional:true,default_value:val});\n      }\n}\n                \nfunction inputs(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.inputs.push({name:str1});\n  if (str2) _Pipeline.spec.inputs.push({name:str2});\n  if (str3) _Pipeline.spec.inputs.push({name:str3});\n  if (str4) _Pipeline.spec.inputs.push({name:str4});\n}\n\nfunction inputs_opt(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.inputs.push({name:str1,optional:true});\n  if (str2) _Pipeline.spec.inputs.push({name:str2,optional:true});\n  if (str3) _Pipeline.spec.inputs.push({name:str3,optional:true});\n  if (str4) _Pipeline.spec.inputs.push({name:str4,optional:true});\n}\n\nfunction outputs(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.outputs.push({name:str1});\n  if (str2) _Pipeline.spec.outputs.push({name:str2});\n  if (str3) _Pipeline.spec.outputs.push({name:str3});\n  if (str4) _Pipeline.spec.outputs.push({name:str4});\n}\n\nfunction outputs_opt(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.outputs.push({name:str1,optional:true});\n  if (str2) _Pipeline.spec.outputs.push({name:str2,optional:true});\n  if (str3) _Pipeline.spec.outputs.push({name:str3,optional:true});\n  if (str4) _Pipeline.spec.outputs.push({name:str4,optional:true});\n}","steps":[],"spec":{"name":"","description":"","inputs":[],"outputs":[],"parameters":[]},"export":true},{"spec":{"name":"curate","description":"","inputs":[{"name":"pre"},{"name":"firings"}],"outputs":[],"parameters":[]},"steps":[{"step_type":"processor","processor_name":"ms3.cluster_metrics","inputs":{"timeseries":"pre","firings":"firings"},"outputs":{"cluster_metrics_out":"metrics1"},"parameters":{"samplerate":"${samplerate}"}},{"step_type":"processor","processor_name":"ms3.isolation_metrics","inputs":{"timeseries":"pre","firings":"firings"},"outputs":{"metrics_out":"metrics2"},"parameters":{"compute_bursting_parents":"false"}},{"step_type":"processor","processor_name":"ms3.combine_cluster_metrics","inputs":{"metrics_list":["metrics1","metrics2"]},"outputs":{"metrics_out":"cluster_metrics_out"},"parameters":{}},{"step_type":"processor","processor_name":"pyms.create_label_map","inputs":{"metrics":"cluster_metrics_out"},"outputs":{"label_map_out":"label_map_out"},"parameters":{"firing_rate_thresh":"${firing_rate_thresh}","isolation_thresh":"${isolation_thresh}","noise_overlap_thresh":"${noise_overlap_thresh}","peak_snr_thresh":"${peak_snr_thresh}"}}],"input_files":[],"output_files":[],"export":false}],"input_files":[],"output_files":[],"jobs":[]}